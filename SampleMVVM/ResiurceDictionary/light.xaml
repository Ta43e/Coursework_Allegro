<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:custom="clr-namespace:CustomControls.Controls;assembly=CustomControls"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="SampleMVVM.Views"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="AddCircleIconStyle" TargetType="{x:Type materialDesign:PackIcon}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AddCircleIconStyleDelete" TargetType="{x:Type materialDesign:PackIcon}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AddCircleIconStyleAdd" TargetType="{x:Type materialDesign:PackIcon}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Green"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="But" TargetType="Button">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Height" Value="auto"/>
    </Style>

    <Style x:Key="Butt" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  BorderBrush="LightGray" BorderThickness="0 0 0 2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="60"/>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
    </Style>







    <Style x:Key="FonStyle" TargetType="Grid">
        <Setter Property="Background" Value="#fff" />
    </Style>
    <Style x:Key="FonStyleFrame" TargetType="Grid">
        <Setter Property="Background" Value="Beige"/>
    </Style>
    <Style x:Key="ImageHomeStyle" TargetType="Image">
        <Setter Property="Source" Value="../resurse/Home.png" />
    </Style>
    <Style x:Key="ImageProfilesStyle" TargetType="Image">
        <Setter Property="Source" Value="../resurse/like.png" />
    </Style>
    <Style x:Key="ImageSettingsStyle" TargetType="Image">
        <Setter Property="Source" Value="../resurse/AddMusic.png" />
    </Style>
    <Style x:Key="ImageTemaStyle" TargetType="Image">
        <Setter Property="Source" Value="../resurse/dark.png" />
    </Style>
    <Style x:Key="ImageListMusicStyle" TargetType="Image">
        <Setter Property="Source" Value="../resurse/PlayList.png" />
    </Style>
    
    
    <Style x:Key="ListViewStyle" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="10" />
                <Setter Property="Background" Value="Transparent"/>
            </Style>
        </Style.Resources>
    </Style>
    
    
    <Style x:Key="BottomButtonsStyle" TargetType="Button" >
        <Setter Property="Width" Value="30"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="5, 0, 5, 0"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!--<Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="IsHitTestVisible" Value="True"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>-->

    <Style x:Key="TextH1" TargetType="TextBlock">
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    <Style x:Key="TitlePlayList" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    <Style x:Key="SucheText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    <Style x:Key="ColVo" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="greenButton" >
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="20 4"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="10" />
                <Setter Property="Background" Value="Transparent"/>
            </Style>
        </Style.Resources>
    </Style>
    
    <Style TargetType="{x:Type StackPanel}" x:Key="Visible/HidenReg">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=LoginCheckBox, Path=IsChecked}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=LoginCheckBox, Path=IsChecked}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type custom:InputBox}" x:Key="Visible/HidenInputBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=LoginCheckBox, Path=IsChecked}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=LoginCheckBox, Path=IsChecked}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Canvas}" x:Key="Visible/HidenCanvas">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=filterCheck, Path=IsChecked}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=filterCheck, Path=IsChecked}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="Visible/HidenLog" BasedOn="{StaticResource greenButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=LoginCheckBox, Path=IsChecked}" Value="False">
                <Setter Property="Content" Value="{DynamicResource log_login}"/>
                <Setter Property="Command" Value="{Binding LoginCommand}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=LoginCheckBox, Path=IsChecked}" Value="True">
                <Setter Property="Content" Value="{DynamicResource log_register}"/>
                <Setter Property="Command" Value="{Binding RegisterCommand}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>