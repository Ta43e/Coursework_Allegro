<Page x:Class="SampleMVVM.Views.UserListMusicView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:SampleMVVM.Views" xmlns:i="http://schemas.microsoft.com/xaml/behaviors" xmlns:viewmodels="clr-namespace:SampleMVVM.ViewModels" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="UserListMusicView">
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100*"/>
                <ColumnDefinition  Width="20*"/>
            </Grid.ColumnDefinitions>
            <ListBox  HorizontalContentAlignment="Stretch" Visibility="{Binding CheckUser, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Column="0" ItemsSource="{Binding ListMusicShow}" Style="{DynamicResource ListViewStyle}" SelectedItem="{Binding SelectedSongs, Mode=TwoWay}" >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel HorizontalAlignment="Stretch">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image Source="{Binding Path=ImagePath}" Height="70" Width="70" Grid.Column="0"/>
                                <Grid Grid.Column="1"
                                      HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40*"/>
                                            <RowDefinition Height="40*"/>
                                            <RowDefinition Height="40*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="360"/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="100"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Row="0" Grid.Column="0"  Text="{Binding Path=Name}" Style="{DynamicResource TextH1}" />
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding Path=Artist}" Style="{DynamicResource TitlePlayList}"/>
                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{Binding Path=Duration}"  Style="{DynamicResource ColVo}" />

                                        <Button  Grid.Column="2" Grid.Row="0"  Style="{DynamicResource But}" Command="{Binding DataContext.Description, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" 
                                                     CommandParameter="{Binding Id}" IsEnabled="{Binding DataContext.CanDeleteItem  , RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}">
                                            <materialDesign:PackIcon Kind="AboutCircle" Style="{DynamicResource AddCircleIconStyle}"/>
                                        </Button>

                                        <Button  Grid.Column="2" Grid.Row="1"  Style="{DynamicResource But}" Command="{Binding DataContext.OpenSelectPlaylistToAddViewModel, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" 
                                                    CommandParameter="{Binding Id}" 
                                                    IsEnabled="{Binding DataContext.CanDeleteItem, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}">
                                            <materialDesign:PackIcon Kind="FormatListGroupPlus" Style="{DynamicResource AddCircleIconStyleAdd}"/>
                                        </Button>
                                        <Button  Grid.Column="2" Grid.Row="3"  Style="{DynamicResource But}" Command="{Binding DataContext.Delete, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" 
                                                    CommandParameter="{Binding Id}" 
                                                    IsEnabled="{Binding DataContext.CanDeleteItem, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}">
                                            <materialDesign:PackIcon Kind="Delete" Style="{DynamicResource AddCircleIconStyleDelete}"/>
                                        </Button>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding DoubleClickCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>
        </Grid>
    </Grid>
</Page>
